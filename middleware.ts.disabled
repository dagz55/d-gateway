import { clerkMiddleware, createRouteMatcher } from "@clerk/nextjs/server";
import { NextResponse } from "next/server";

// Define public routes that don't require authentication
const isPublicRoute = createRouteMatcher([
  "/", // Root path for landing page
  "/sign-in(.*)", // Clerk sign-in pages and internal routes
  "/sign-up(.*)", // Clerk sign-up pages and internal routes
  "/admin-setup", // Admin setup page
  "/api/webhooks(.*)", // Webhook endpoints
  "/market", // Public market page
  "/enterprise", // Public enterprise page
  "/help", // Public help page
  "/auth/oauth-success", // Temporary OAuth redirect handler
]);

export default clerkMiddleware((auth, req) => {
  // Always allow public routes without any processing
  if (isPublicRoute(req)) {
    return NextResponse.next();
  }

  // For all other routes, protect them
  auth().protect();
});

export const config = {
  matcher: [
    // Skip Next.js internals and all static files
    "/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)",
    // Always run for API routes  
    "/(api|trpc)(.*)",
  ],
};